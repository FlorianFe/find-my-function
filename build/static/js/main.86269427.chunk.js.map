{"version":3,"sources":["App.js","ParamsInput/ParamsInput.js","packages/RAMDA.js","packages/MATH.js","reportWebVitals.js","index.js"],"names":["LODASH","lodash","PACKAGES","name","funcs","RAMDA","docLink","MATH","App","useState","funcParams","setFuncParams","funcResult","setFuncResult","searchResults","setSearchResults","useEffect","search","flatten","map","pack","keys","Object","filter","key","isFunction","calculatedFuncResult","calculatedFuncResultWithoutLastParam","slice","evaluatedFuncResult","eval","equals","undefined","e","style","position","href","loading","width","height","src","class","alt","data-recalc-dims","container","spacing","direction","alignItems","justifyContent","minHeight","fontSize","item","xs","onKeyUp","code","className","onChange","value","target","length","join","searchResult","index","gutterBottom","variant","component","color","size","isLastCharAOpenedComma","text","charArray","split","lastIndex","countRoundBrackets","countSquareBrackets","countCurlyBrackets","i","trimParams","substring","useStyles","makeStyles","root","input","focused","ParamsInput","classes","inputValues","setInputValues","focusedInputIndex","setFocusedInputIndex","val","parts","param","inputElement","autoFocus","onFocus","onBlur","remove","trimmedParams","update","tabIndex","T","__","F","add","addIndex","adjust","all","allPass","always","and","any","anyPass","ap","aperture","append","apply","applySpec","applyTo","ascend","assoc","assocPath","binary","bind","both","call","chain","clamp","clone","collectBy","comparator","complement","compose","composeWith","concat","cond","construct","constructN","converge","count","countBy","curry","curryN","dec","defaultTo","descend","difference","differenceWith","dissoc","dissocPath","divide","drop","dropLast","dropLastWhile","dropRepeats","dropRepeatsWith","dropWhile","either","empty","endsWith","eqBy","eqProps","evolve","find","findIndex","findLast","findLastIndex","flip","forEach","forEachObjIndexed","fromPairs","groupBy","groupWith","gt","gte","has","hasIn","hasPath","head","identical","identity","ifElse","inc","includes","indexBy","indexOf","init","innerJoin","insert","insertAll","intersection","intersperse","into","invert","invertObj","invoker","is","isEmpty","isNil","juxt","keysIn","last","lastIndexOf","lens","lensIndex","lensPath","lensProp","lift","liftN","lt","lte","mapAccum","mapAccumRight","mapObjIndexed","match","mathMod","max","maxBy","mean","median","memoizeWith","mergeAll","mergeDeepLeft","mergeDeepRight","mergeDeepWith","mergeDeepWithKey","mergeLeft","mergeRight","mergeWith","mergeWithKey","min","minBy","modify","modifyPath","modulo","move","multiply","nAry","partialObject","negate","none","not","nth","nthArg","o","objOf","of","omit","on","once","or","otherwise","over","pair","partial","partialRight","partition","path","paths","pathEq","pathOr","pathSatisfies","pick","pickAll","pickBy","pipe","pipeWith","pluck","prepend","product","project","promap","prop","propEq","propIs","propOr","propSatisfies","props","range","reduce","reduceBy","reduceRight","reduceWhile","reduced","reject","repeat","replace","reverse","scan","sequence","set","sort","sortBy","sortWith","splitAt","splitEvery","splitWhen","splitWhenever","startsWith","subtract","sum","symmetricDifference","symmetricDifferenceWith","tail","take","takeLast","takeLastWhile","takeWhile","tap","test","andThen","times","toLower","toPairs","toPairsIn","toString","toUpper","transduce","transpose","traverse","trim","tryCatch","type","unapply","unary","uncurryN","unfold","union","unionWith","uniq","uniqBy","uniqWith","unless","unnest","until","unwind","useWith","values","valuesIn","view","when","where","whereAny","whereEq","without","xor","xprod","zip","zipObj","zipWith","thunkify","abs","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log1p","log2","log10","pow","random","round","sign","sin","sinh","sqrt","tan","tanh","trunc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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MACAC,OACAC,MACAC,QACAC,aACAC,WACAC,QACAC,YACAC,WACAC,QACAC,QACAC,YACAC,OACAC,aACAC,WACAC,UACAC,cACAC,YACAC,WACAC,UACAC,cACAC,WACAC,SACAC,SACAC,SACAC,UACAC,UACAC,UACAC,cACAC,eACAC,eACAC,YACAC,gBACAC,WACAC,SACAC,cACAC,eACAC,aACAC,UACAC,YACAC,UACAC,WACAC,QACAC,cACAC,YACAC,eACAC,mBACAC,WACAC,eACAC,WACAC,SACAC,cACAC,mBACAC,iBACAC,qBACAC,eACAC,YACAC,WACAC,cACAC,UACAC,aACAlI,YACAmI,YACA3I,YACA4I,UACAC,eACAC,cACAC,mBACApJ,aACAqJ,UACAC,aACAC,uBACAC,eACAC,aACAC,eACAC,QACAC,SACAC,SACAC,WACAC,aACAC,UACAC,eACAC,cACAC,YACAC,SACAC,cACAC,aACAC,aACAC,UACAC,eACAC,YACAC,eACAC,kBACAC,iBACAC,UACAC,YACAC,eACAC,aACAC,QACAC,aACAC,WACA1I,UACA2I,UACAlL,UACAmL,YACAC,UACAC,iBACA/I,YACAgJ,UACAC,eACAC,cACAC,cACAC,UACAC,WACAC,QACAC,SACA/L,SACAgM,cACAC,mBACAC,mBACAC,WACAC,aACAC,SACAC,WACAC,UACAC,YACAC,iBACAC,cACAC,mBACAC,oBACAC,mBACAC,sBACAC,eACAC,gBACAC,eACAC,kBACAC,SACAC,WACAC,YACAC,gBACAC,YACAC,UACAC,cACAC,UACAC,mBACAC,YACAC,UACAC,SACAC,SACAC,YACAC,OACAC,WACAC,QACAC,UACAC,QACAC,UACAC,QACAC,eACAC,UACAC,UACAC,aACAC,kBACAC,eACAC,UACAC,WACAC,YACAC,YACAC,mBACAC,UACAC,aACAC,YACAC,UACAC,cACAC,WACAC,aACAC,aACAC,aACAC,YACAC,UACAC,YACAC,YACAC,YACAC,mBACAC,WACAC,WACAC,YACAC,cACAC,iBACAC,iBACAC,aACAC,YACA3L,YACA4L,YACAC,aACAC,aACAC,UACAC,cACAC,SACAtQ,WACAuQ,UACAC,YACAC,cACA9N,WACA+N,aACAC,gBACAC,eACAC,mBACAC,gBACAC,cACAC,SACAC,yBACAC,6BACAC,UACAC,UACAC,cACAC,mBACAC,eACAC,SACAC,UACAC,YACAC,WACAC,aACAC,aACAC,eACAC,cACAC,aACAC,eACAC,eACAC,cACAC,UACAC,cACAC,UACAC,aACAC,WACAC,cACAC,YACAC,WACAC,eACAC,UACAC,YACAC,cACAC,YACAC,YACAC,WACAC,YACA5O,YACA6O,aACAC,YACAC,cACAC,UACAC,UACAC,WACAC,cACAC,aACAC,aACAC,SACAC,WACAC,SACAC,YACAC,aACAC,eAGazV,O,oCC1eTE,EAAO,CACXwV,IAHEC,KAnCFD,IAuCAE,KAJED,KAlCFC,KAuCAC,MALEF,KAjCFE,MAuCAC,KANEH,KAhCFG,KAuCAC,MAPEJ,KA/BFI,MAuCAC,KAREL,KA9BFK,KAuCAC,MATEN,KA7BFM,MAuCAC,MAVEP,KA5BFO,MAuCAC,KAXER,KA3BFQ,KAuCAC,KAZET,KA1BFS,KAuCAC,MAbEV,KAzBFU,MAuCAC,IAdEX,KAxBFW,IAuCAC,KAfEZ,KAvBFY,KAuCAC,IAhBEb,KAtBFa,IAuCAC,MAjBEd,KArBFc,MAuCAC,MAlBEf,KApBFe,MAuCAC,OAnBEhB,KAnBFgB,OAuCAC,MApBEjB,KAlBFiB,MAuCAC,KArBElB,KAjBFkB,KAuCAC,IAtBEnB,KAhBFmB,IAuCAC,MAvBEpB,KAfFoB,MAuCAC,KAxBErB,KAdFqB,KAuCAC,MAzBEtB,KAbFsB,MAuCA9J,IA1BEwI,KAZFxI,IAuCAc,IA3BE0H,KAXF1H,IAuCAiJ,IA5BEvB,KAVFuB,IAuCAC,OA7BExB,KATFwB,OAuCAC,MA9BEzB,KARFyB,MAuCAC,KA/BE1B,KAPF0B,KAuCAC,IAhCE3B,KANF2B,IAuCAC,KAjCE5B,KALF4B,KAuCAC,KAlCE7B,KAJF6B,KAuCAC,IAnCE9B,KAHF8B,IAuCAC,KApCE/B,KAFF+B,KAuCAC,MArCEhC,KADFgC,OAyCazX,O,2JChEA0X,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACpY,EAAA,EAAD,MAEFqY,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.86269427.chunk.js","sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport Input from '@mui/material/Input';\nimport Grid from '@mui/material/Grid';\nimport { update, flatten, equals } from 'ramda';\nimport lodash, { isFunction } from 'lodash';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nimport ParamsInput from './ParamsInput/ParamsInput';\nimport RAMDA from './packages/RAMDA';\nimport MATH from './packages/MATH';\n\nconst LODASH = lodash;\n\nconst PACKAGES = [\n  {\n    name: 'ramda',\n    funcs: RAMDA,\n    docLink: (name) => `https://ramdajs.com/docs/#${name}`,\n  },\n  {\n    name: 'lodash',\n    funcs: LODASH,\n    docLink: (name) => `https://lodash.com/docs/#${name}`,\n  },\n  {\n    name: 'math',\n    funcs: MATH,\n    docLink: (name) =>\n      `https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/${name}`,\n  },\n];\n\nfunction App() {\n  const [funcParams, setFuncParams] = useState(['']);\n  const [funcResult, setFuncResult] = useState('');\n  const [searchResults, setSearchResults] = useState(null);\n\n  useEffect(() => {\n    search();\n  }, [funcParams, funcResult]);\n\n  const search = () => {\n    const searchResults = flatten(\n      PACKAGES.map((pack) => {\n        const keys = Object.keys(pack.funcs);\n\n        return keys\n          .filter((key) => {\n            try {\n              if (!isFunction(pack.funcs[key])) return false;\n\n              const calculatedFuncResult = pack.funcs[key](...funcParams);\n              const calculatedFuncResultWithoutLastParam = pack.funcs[key](\n                ...funcParams.slice(0, -1)\n              );\n              const evaluatedFuncResult = eval(funcResult);\n\n              return (\n                equals(calculatedFuncResult, evaluatedFuncResult) &&\n                evaluatedFuncResult !== undefined &&\n                !equals(\n                  calculatedFuncResult,\n                  calculatedFuncResultWithoutLastParam\n                )\n              );\n            } catch (e) {\n              return false;\n            }\n          })\n          .map((key) => ({ name: key, pack: pack }));\n      })\n    );\n\n    setSearchResults(searchResults);\n  };\n\n  return (\n    <>\n      <div style={{ position: 'fixed' }}>\n        <a href=\"https://github.com/florianfe\">\n          <img\n            loading=\"lazy\"\n            width=\"149\"\n            height=\"149\"\n            src=\"https://github.blog/wp-content/uploads/2008/12/forkme_left_darkblue_121621.png?resize=149%2C149\"\n            class=\"attachment-full size-full\"\n            alt=\"Fork me on GitHub\"\n            data-recalc-dims=\"1\"\n          />\n        </a>\n      </div>\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        style={{ minHeight: '50vh', fontSize: '2rem' }}\n      >\n        <Grid item xs={3}>\n          <div\n            onKeyUp={(e) => {\n              if (e.code === 'Enter') search();\n            }}\n            className=\"content\"\n          >\n            f(\n            <ParamsInput\n              onChange={(value) => {\n                setFuncParams(value);\n              }}\n            />\n            ) ={' '}\n            <Input\n              style={{ fontSize: '2rem' }}\n              value={funcResult}\n              onChange={(e) => {\n                const value = e.target.value;\n                setFuncResult(value);\n              }}\n            />\n          </div>\n        </Grid>\n      </Grid>\n      <div className=\"flex-container\">\n        <div className=\"flex-item\">\n          {searchResults !== null && searchResults.length === 0 && (\n            <Typography>{`No results for f(${funcParams.join(\n              ', '\n            )}) = ${funcResult}`}</Typography>\n          )}\n        </div>\n      </div>\n      <div className=\"flex-container\">\n        {searchResults !== null &&\n          searchResults.map((searchResult, index) => (\n            <div className=\"flex-item\" key={index}>\n              <Card>\n                <CardContent>\n                  <Typography gutterBottom variant=\"h5\" component=\"div\">\n                    {searchResult.name}\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Package: {searchResult.pack.name} <br />\n                  </Typography>\n                </CardContent>\n                <CardActions>\n                  <Button\n                    size=\"small\"\n                    target=\"_blank\"\n                    href={searchResult.pack.docLink(searchResult.name)}\n                  >\n                    See the docs\n                  </Button>\n                </CardActions>\n              </Card>\n            </div>\n          ))}\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import './ParamsInput.css';\nimport { useState, useEffect } from 'react';\nimport { flatten, update, remove } from 'ramda';\nimport Input from '@mui/material/Input';\nimport { makeStyles } from '@mui/styles';\n\nconst isLastCharAOpenedComma = (text) => {\n  const charArray = text.split('');\n  const lastIndex = charArray.length - 1;\n\n  let countRoundBrackets = 0;\n  let countSquareBrackets = 0;\n  let countCurlyBrackets = 0;\n\n  for (let i = 0; i < charArray.length; i++) {\n    if (charArray[i] === '(') {\n      countRoundBrackets++;\n    } else if (charArray[i] === ')') {\n      countRoundBrackets--;\n    } else if (charArray[i] === '[') {\n      countSquareBrackets++;\n    } else if (charArray[i] === ']') {\n      countSquareBrackets--;\n    } else if (charArray[i] === '{') {\n      countCurlyBrackets++;\n    } else if (charArray[i] === '}') {\n      countCurlyBrackets--;\n    }\n  }\n\n  return (\n    charArray[lastIndex] === ',' &&\n    countRoundBrackets === 0 &&\n    countSquareBrackets === 0 &&\n    countCurlyBrackets === 0\n  );\n};\n\nconst trimParams = (text) => {\n  const charArray = text.split('');\n  const lastIndex = charArray.length - 1;\n\n  if (isLastCharAOpenedComma(text)) {\n    return [text.substring(0, lastIndex), ''];\n  }\n\n  return [text];\n};\n\nconst useStyles = makeStyles({\n  root: {\n    width: '50px',\n    fontSize: '2rem',\n  },\n  input: {\n    '&:focus': {\n      width: '200px',\n      fontSize: '2rem',\n    },\n  },\n  focused: {\n    width: '200px',\n    fontSize: '2rem',\n  },\n});\n\nconst ParamsInput = ({ onChange }) => {\n  const classes = useStyles();\n\n  const [inputValues, setInputValues] = useState(['']);\n  const [focusedInputIndex, setFocusedInputIndex] = useState(0);\n\n  useEffect(() => {\n    try {\n      onChange(inputValues.map((val) => eval(val)));\n    } catch (e) {}\n  }, [inputValues]);\n\n  const parts = flatten(\n    inputValues.map((param, index) => {\n      const inputElement =\n        focusedInputIndex === index ? (\n          <Input\n            key={index}\n            autoFocus={true}\n            onFocus={() => {\n              setFocusedInputIndex(index);\n            }}\n            onBlur={() => {\n              setFocusedInputIndex(-1);\n            }}\n            classes={{\n              root: classes.root,\n              focused: classes.focused,\n              input: classes.input,\n            }}\n            value={param}\n            onKeyUp={(e) => {\n              if (e.code === 'Backspace' && param === '' && index > 0) {\n                setInputValues(remove(index, 1, inputValues));\n                setFocusedInputIndex(index - 1);\n              }\n            }}\n            onChange={(e) => {\n              const value = e.target.value;\n              const trimmedParams = trimParams(value);\n\n              setInputValues(\n                flatten(update(index, trimmedParams, inputValues))\n              );\n\n              if (isLastCharAOpenedComma(value)) {\n                setFocusedInputIndex(index + 1);\n              }\n            }}\n          />\n        ) : (\n          <span\n            href=\"#\"\n            key={index}\n            tabIndex=\"0\"\n            onFocus={() => {\n              setFocusedInputIndex(index);\n            }}\n          >\n            {param.length > 0 ? param : <b>?</b>}\n          </span>\n        );\n\n      if (index !== 0) {\n        return [', ', inputElement];\n      }\n      return [inputElement];\n    })\n  );\n\n  return <>{parts}</>;\n};\n\nexport default ParamsInput;\n","import {\n  T,\n  __,\n  F,\n  add,\n  addIndex,\n  adjust,\n  all,\n  allPass,\n  always,\n  and,\n  any,\n  anyPass,\n  ap,\n  aperture,\n  append,\n  apply,\n  applySpec,\n  applyTo,\n  ascend,\n  assoc,\n  assocPath,\n  binary,\n  bind,\n  both,\n  call,\n  chain,\n  clamp,\n  clone,\n  collectBy,\n  comparator,\n  complement,\n  compose,\n  composeWith,\n  concat,\n  cond,\n  construct,\n  constructN,\n  converge,\n  count,\n  countBy,\n  curry,\n  curryN,\n  dec,\n  defaultTo,\n  descend,\n  difference,\n  differenceWith,\n  dissoc,\n  dissocPath,\n  divide,\n  drop,\n  dropLast,\n  dropLastWhile,\n  dropRepeats,\n  dropRepeatsWith,\n  dropWhile,\n  either,\n  empty,\n  endsWith,\n  eqBy,\n  eqProps,\n  equals,\n  evolve,\n  filter,\n  find,\n  findIndex,\n  findLast,\n  findLastIndex,\n  flatten,\n  flip,\n  forEach,\n  forEachObjIndexed,\n  fromPairs,\n  groupBy,\n  groupWith,\n  gt,\n  gte,\n  has,\n  hasIn,\n  hasPath,\n  head,\n  identical,\n  identity,\n  ifElse,\n  inc,\n  includes,\n  indexBy,\n  indexOf,\n  init,\n  innerJoin,\n  insert,\n  insertAll,\n  intersection,\n  intersperse,\n  into,\n  invert,\n  invertObj,\n  invoker,\n  is,\n  isEmpty,\n  isNil,\n  join,\n  juxt,\n  keys,\n  keysIn,\n  last,\n  lastIndexOf,\n  length,\n  lens,\n  lensIndex,\n  lensPath,\n  lensProp,\n  lift,\n  liftN,\n  lt,\n  lte,\n  map,\n  mapAccum,\n  mapAccumRight,\n  mapObjIndexed,\n  match,\n  mathMod,\n  max,\n  maxBy,\n  mean,\n  median,\n  memoizeWith,\n  mergeAll,\n  mergeDeepLeft,\n  mergeDeepRight,\n  mergeDeepWith,\n  mergeDeepWithKey,\n  mergeLeft,\n  mergeRight,\n  mergeWith,\n  mergeWithKey,\n  min,\n  minBy,\n  modify,\n  modifyPath,\n  modulo,\n  move,\n  multiply,\n  nAry,\n  partialObject,\n  negate,\n  none,\n  not,\n  nth,\n  nthArg,\n  o,\n  objOf,\n  of,\n  omit,\n  on,\n  once,\n  or,\n  otherwise,\n  over,\n  pair,\n  partial,\n  partialRight,\n  partition,\n  path,\n  paths,\n  pathEq,\n  pathOr,\n  pathSatisfies,\n  pick,\n  pickAll,\n  pickBy,\n  pipe,\n  pipeWith,\n  pluck,\n  prepend,\n  product,\n  project,\n  promap,\n  prop,\n  propEq,\n  propIs,\n  propOr,\n  propSatisfies,\n  props,\n  range,\n  reduce,\n  reduceBy,\n  reduceRight,\n  reduceWhile,\n  reduced,\n  reject,\n  remove,\n  repeat,\n  replace,\n  reverse,\n  scan,\n  sequence,\n  set,\n  slice,\n  sort,\n  sortBy,\n  sortWith,\n  split,\n  splitAt,\n  splitEvery,\n  splitWhen,\n  splitWhenever,\n  startsWith,\n  subtract,\n  sum,\n  symmetricDifference,\n  symmetricDifferenceWith,\n  tail,\n  take,\n  takeLast,\n  takeLastWhile,\n  takeWhile,\n  tap,\n  test,\n  andThen,\n  times,\n  toLower,\n  toPairs,\n  toPairsIn,\n  toString,\n  toUpper,\n  transduce,\n  transpose,\n  traverse,\n  trim,\n  tryCatch,\n  type,\n  unapply,\n  unary,\n  uncurryN,\n  unfold,\n  union,\n  unionWith,\n  uniq,\n  uniqBy,\n  uniqWith,\n  unless,\n  unnest,\n  until,\n  unwind,\n  update,\n  useWith,\n  values,\n  valuesIn,\n  view,\n  when,\n  where,\n  whereAny,\n  whereEq,\n  without,\n  xor,\n  xprod,\n  zip,\n  zipObj,\n  zipWith,\n  thunkify,\n} from \"ramda\";\n\nconst RAMDA = {\n  T,\n  __,\n  F,\n  add,\n  addIndex,\n  adjust,\n  all,\n  allPass,\n  always,\n  and,\n  any,\n  anyPass,\n  ap,\n  aperture,\n  append,\n  apply,\n  applySpec,\n  applyTo,\n  ascend,\n  assoc,\n  assocPath,\n  binary,\n  bind,\n  both,\n  call,\n  chain,\n  clamp,\n  clone,\n  collectBy,\n  comparator,\n  complement,\n  compose,\n  composeWith,\n  concat,\n  cond,\n  construct,\n  constructN,\n  converge,\n  count,\n  countBy,\n  curry,\n  curryN,\n  dec,\n  defaultTo,\n  descend,\n  difference,\n  differenceWith,\n  dissoc,\n  dissocPath,\n  divide,\n  drop,\n  dropLast,\n  dropLastWhile,\n  dropRepeats,\n  dropRepeatsWith,\n  dropWhile,\n  either,\n  empty,\n  endsWith,\n  eqBy,\n  eqProps,\n  equals,\n  evolve,\n  filter,\n  find,\n  findIndex,\n  findLast,\n  findLastIndex,\n  flatten,\n  flip,\n  forEach,\n  forEachObjIndexed,\n  fromPairs,\n  groupBy,\n  groupWith,\n  gt,\n  gte,\n  has,\n  hasIn,\n  hasPath,\n  head,\n  identical,\n  identity,\n  ifElse,\n  inc,\n  includes,\n  indexBy,\n  indexOf,\n  init,\n  innerJoin,\n  insert,\n  insertAll,\n  intersection,\n  intersperse,\n  into,\n  invert,\n  invertObj,\n  invoker,\n  is,\n  isEmpty,\n  isNil,\n  join,\n  juxt,\n  keys,\n  keysIn,\n  last,\n  lastIndexOf,\n  length,\n  lens,\n  lensIndex,\n  lensPath,\n  lensProp,\n  lift,\n  liftN,\n  lt,\n  lte,\n  map,\n  mapAccum,\n  mapAccumRight,\n  mapObjIndexed,\n  match,\n  mathMod,\n  max,\n  maxBy,\n  mean,\n  median,\n  memoizeWith,\n  mergeAll,\n  mergeDeepLeft,\n  mergeDeepRight,\n  mergeDeepWith,\n  mergeDeepWithKey,\n  mergeLeft,\n  mergeRight,\n  mergeWith,\n  mergeWithKey,\n  min,\n  minBy,\n  modify,\n  modifyPath,\n  modulo,\n  move,\n  multiply,\n  nAry,\n  partialObject,\n  negate,\n  none,\n  not,\n  nth,\n  nthArg,\n  o,\n  objOf,\n  of,\n  omit,\n  on,\n  once,\n  or,\n  otherwise,\n  over,\n  pair,\n  partial,\n  partialRight,\n  partition,\n  path,\n  paths,\n  pathEq,\n  pathOr,\n  pathSatisfies,\n  pick,\n  pickAll,\n  pickBy,\n  pipe,\n  pipeWith,\n  pluck,\n  prepend,\n  product,\n  project,\n  promap,\n  prop,\n  propEq,\n  propIs,\n  propOr,\n  propSatisfies,\n  props,\n  range,\n  reduce,\n  reduceBy,\n  reduceRight,\n  reduceWhile,\n  reduced,\n  reject,\n  remove,\n  repeat,\n  replace,\n  reverse,\n  scan,\n  sequence,\n  set,\n  slice,\n  sort,\n  sortBy,\n  sortWith,\n  split,\n  splitAt,\n  splitEvery,\n  splitWhen,\n  splitWhenever,\n  startsWith,\n  subtract,\n  sum,\n  symmetricDifference,\n  symmetricDifferenceWith,\n  tail,\n  take,\n  takeLast,\n  takeLastWhile,\n  takeWhile,\n  tap,\n  test,\n  andThen,\n  times,\n  toLower,\n  toPairs,\n  toPairsIn,\n  toString,\n  toUpper,\n  transduce,\n  transpose,\n  traverse,\n  trim,\n  tryCatch,\n  type,\n  unapply,\n  unary,\n  uncurryN,\n  unfold,\n  union,\n  unionWith,\n  uniq,\n  uniqBy,\n  uniqWith,\n  unless,\n  unnest,\n  until,\n  unwind,\n  update,\n  useWith,\n  values,\n  valuesIn,\n  view,\n  when,\n  where,\n  whereAny,\n  whereEq,\n  without,\n  xor,\n  xprod,\n  zip,\n  zipObj,\n  zipWith,\n  thunkify,\n};\n\nexport default RAMDA;\n","const {\n  abs,\n  acos,\n  acosh,\n  asin,\n  asinh,\n  atan,\n  atan2,\n  atanh,\n  cbrt,\n  ceil,\n  clz32,\n  cos,\n  cosh,\n  exp,\n  expm1,\n  floor,\n  fround,\n  hypot,\n  imul,\n  log,\n  log1p,\n  log2,\n  log10,\n  max,\n  min,\n  pow,\n  random,\n  round,\n  sign,\n  sin,\n  sinh,\n  sqrt,\n  tan,\n  tanh,\n  trunc,\n} = Math;\n\nconst MATH = {\n  abs,\n  acos,\n  acosh,\n  asin,\n  asinh,\n  atan,\n  atan2,\n  atanh,\n  cbrt,\n  ceil,\n  clz32,\n  cos,\n  cosh,\n  exp,\n  expm1,\n  floor,\n  fround,\n  hypot,\n  imul,\n  log,\n  log1p,\n  log2,\n  log10,\n  max,\n  min,\n  pow,\n  random,\n  round,\n  sign,\n  sin,\n  sinh,\n  sqrt,\n  tan,\n  tanh,\n  trunc,\n};\n\nexport default MATH;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}